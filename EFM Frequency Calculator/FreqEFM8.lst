0000              1   ;--------------------------------------------------------
0000              2   ; File Created by C51
0000              3   ; Version 1.0.0 #1170 (Feb 16 2022) (MSVC)
0000              4   ; This file was generated Wed Mar 15 13:43:54 2023
0000              5   ;--------------------------------------------------------
                  5   $name FreqEFM8__1_
                  6   $optc51 --model-small
                  7   $printf_float
0000              9            R_DSEG    segment data
0000             10            R_CSEG    segment code
0000             11            R_BSEG    segment bit
0000             12            R_XSEG    segment xdata
0000             13            R_PSEG    segment xdata
0000             14            R_ISEG    segment idata
0000             15            R_OSEG    segment data overlay
0000             16            BIT_BANK  segment data overlay
0000             17            R_HOME    segment code
0000             18            R_GSINIT  segment code
0000             19            R_IXSEG   segment xdata
0000             20            R_CONST   segment code
0000             21            R_XINIT   segment code
0000             22            R_DINIT   segment code
0000             23   
0000             24   ;--------------------------------------------------------
0000             25   ; Public variables in this module
0000             26   ;--------------------------------------------------------
0000             27            public _main
0000             28            public _getsn
0000             29            public _LCDprint
0000             30            public _LCD_4BIT
0000             31            public _WriteCommand
0000             32            public _WriteData
0000             33            public _LCD_byte
0000             34            public _LCD_pulse
0000             35            public _TIMER0_Init
0000             36            public _waitms
0000             37            public _Timer3us
0000             38            public __c51_external_startup
0000             39            public _LCDprint_PARM_3
0000             40            public _getsn_PARM_2
0000             41            public _LCDprint_PARM_2
0000             42            public _capacitance
0000             43            public _overflow_count
0000             44   ;--------------------------------------------------------
0000             45   ; Special Function Registers
0000             46   ;--------------------------------------------------------
0000             47   _ACC            DATA 0xe0
0000             48   _ADC0ASAH       DATA 0xb6
0000             49   _ADC0ASAL       DATA 0xb5
0000             50   _ADC0ASCF       DATA 0xa1
0000             51   _ADC0ASCT       DATA 0xc7
0000             52   _ADC0CF0        DATA 0xbc
0000             53   _ADC0CF1        DATA 0xb9
0000             54   _ADC0CF2        DATA 0xdf
0000             55   _ADC0CN0        DATA 0xe8
0000             56   _ADC0CN1        DATA 0xb2
0000             57   _ADC0CN2        DATA 0xb3
0000             58   _ADC0GTH        DATA 0xc4
0000             59   _ADC0GTL        DATA 0xc3
0000             60   _ADC0H          DATA 0xbe
0000             61   _ADC0L          DATA 0xbd
0000             62   _ADC0LTH        DATA 0xc6
0000             63   _ADC0LTL        DATA 0xc5
0000             64   _ADC0MX         DATA 0xbb
0000             65   _B              DATA 0xf0
0000             66   _CKCON0         DATA 0x8e
0000             67   _CKCON1         DATA 0xa6
0000             68   _CLEN0          DATA 0xc6
0000             69   _CLIE0          DATA 0xc7
0000             70   _CLIF0          DATA 0xe8
0000             71   _CLKSEL         DATA 0xa9
0000             72   _CLOUT0         DATA 0xd1
0000             73   _CLU0CF         DATA 0xb1
0000             74   _CLU0FN         DATA 0xaf
0000             75   _CLU0MX         DATA 0x84
0000             76   _CLU1CF         DATA 0xb3
0000             77   _CLU1FN         DATA 0xb2
0000             78   _CLU1MX         DATA 0x85
0000             79   _CLU2CF         DATA 0xb6
0000             80   _CLU2FN         DATA 0xb5
0000             81   _CLU2MX         DATA 0x91
0000             82   _CLU3CF         DATA 0xbf
0000             83   _CLU3FN         DATA 0xbe
0000             84   _CLU3MX         DATA 0xae
0000             85   _CMP0CN0        DATA 0x9b
0000             86   _CMP0CN1        DATA 0x99
0000             87   _CMP0MD         DATA 0x9d
0000             88   _CMP0MX         DATA 0x9f
0000             89   _CMP1CN0        DATA 0xbf
0000             90   _CMP1CN1        DATA 0xac
0000             91   _CMP1MD         DATA 0xab
0000             92   _CMP1MX         DATA 0xaa
0000             93   _CRC0CN0        DATA 0xce
0000             94   _CRC0CN1        DATA 0x86
0000             95   _CRC0CNT        DATA 0xd3
0000             96   _CRC0DAT        DATA 0xcb
0000             97   _CRC0FLIP       DATA 0xcf
0000             98   _CRC0IN         DATA 0xca
0000             99   _CRC0ST         DATA 0xd2
0000            100   _DAC0CF0        DATA 0x91
0000            101   _DAC0CF1        DATA 0x92
0000            102   _DAC0H          DATA 0x85
0000            103   _DAC0L          DATA 0x84
0000            104   _DAC1CF0        DATA 0x93
0000            105   _DAC1CF1        DATA 0x94
0000            106   _DAC1H          DATA 0x8a
0000            107   _DAC1L          DATA 0x89
0000            108   _DAC2CF0        DATA 0x95
0000            109   _DAC2CF1        DATA 0x96
0000            110   _DAC2H          DATA 0x8c
0000            111   _DAC2L          DATA 0x8b
0000            112   _DAC3CF0        DATA 0x9a
0000            113   _DAC3CF1        DATA 0x9c
0000            114   _DAC3H          DATA 0x8e
0000            115   _DAC3L          DATA 0x8d
0000            116   _DACGCF0        DATA 0x88
0000            117   _DACGCF1        DATA 0x98
0000            118   _DACGCF2        DATA 0xa2
0000            119   _DERIVID        DATA 0xad
0000            120   _DEVICEID       DATA 0xb5
0000            121   _DPH            DATA 0x83
0000            122   _DPL            DATA 0x82
0000            123   _EIE1           DATA 0xe6
0000            124   _EIE2           DATA 0xf3
0000            125   _EIP1           DATA 0xbb
0000            126   _EIP1H          DATA 0xee
0000            127   _EIP2           DATA 0xed
0000            128   _EIP2H          DATA 0xf6
0000            129   _EMI0CN         DATA 0xe7
0000            130   _FLKEY          DATA 0xb7
0000            131   _HFO0CAL        DATA 0xc7
0000            132   _HFO1CAL        DATA 0xd6
0000            133   _HFOCN          DATA 0xef
0000            134   _I2C0ADM        DATA 0xff
0000            135   _I2C0CN0        DATA 0xba
0000            136   _I2C0DIN        DATA 0xbc
0000            137   _I2C0DOUT       DATA 0xbb
0000            138   _I2C0FCN0       DATA 0xad
0000            139   _I2C0FCN1       DATA 0xab
0000            140   _I2C0FCT        DATA 0xf5
0000            141   _I2C0SLAD       DATA 0xbd
0000            142   _I2C0STAT       DATA 0xb9
0000            143   _IE             DATA 0xa8
0000            144   _IP             DATA 0xb8
0000            145   _IPH            DATA 0xf2
0000            146   _IT01CF         DATA 0xe4
0000            147   _LFO0CN         DATA 0xb1
0000            148   _P0             DATA 0x80
0000            149   _P0MASK         DATA 0xfe
0000            150   _P0MAT          DATA 0xfd
0000            151   _P0MDIN         DATA 0xf1
0000            152   _P0MDOUT        DATA 0xa4
0000            153   _P0SKIP         DATA 0xd4
0000            154   _P1             DATA 0x90
0000            155   _P1MASK         DATA 0xee
0000            156   _P1MAT          DATA 0xed
0000            157   _P1MDIN         DATA 0xf2
0000            158   _P1MDOUT        DATA 0xa5
0000            159   _P1SKIP         DATA 0xd5
0000            160   _P2             DATA 0xa0
0000            161   _P2MASK         DATA 0xfc
0000            162   _P2MAT          DATA 0xfb
0000            163   _P2MDIN         DATA 0xf3
0000            164   _P2MDOUT        DATA 0xa6
0000            165   _P2SKIP         DATA 0xcc
0000            166   _P3             DATA 0xb0
0000            167   _P3MDIN         DATA 0xf4
0000            168   _P3MDOUT        DATA 0x9c
0000            169   _PCA0CENT       DATA 0x9e
0000            170   _PCA0CLR        DATA 0x9c
0000            171   _PCA0CN0        DATA 0xd8
0000            172   _PCA0CPH0       DATA 0xfc
0000            173   _PCA0CPH1       DATA 0xea
0000            174   _PCA0CPH2       DATA 0xec
0000            175   _PCA0CPH3       DATA 0xf5
0000            176   _PCA0CPH4       DATA 0x85
0000            177   _PCA0CPH5       DATA 0xde
0000            178   _PCA0CPL0       DATA 0xfb
0000            179   _PCA0CPL1       DATA 0xe9
0000            180   _PCA0CPL2       DATA 0xeb
0000            181   _PCA0CPL3       DATA 0xf4
0000            182   _PCA0CPL4       DATA 0x84
0000            183   _PCA0CPL5       DATA 0xdd
0000            184   _PCA0CPM0       DATA 0xda
0000            185   _PCA0CPM1       DATA 0xdb
0000            186   _PCA0CPM2       DATA 0xdc
0000            187   _PCA0CPM3       DATA 0xae
0000            188   _PCA0CPM4       DATA 0xaf
0000            189   _PCA0CPM5       DATA 0xcc
0000            190   _PCA0H          DATA 0xfa
0000            191   _PCA0L          DATA 0xf9
0000            192   _PCA0MD         DATA 0xd9
0000            193   _PCA0POL        DATA 0x96
0000            194   _PCA0PWM        DATA 0xf7
0000            195   _PCON0          DATA 0x87
0000            196   _PCON1          DATA 0xcd
0000            197   _PFE0CN         DATA 0xc1
0000            198   _PRTDRV         DATA 0xf6
0000            199   _PSCTL          DATA 0x8f
0000            200   _PSTAT0         DATA 0xaa
0000            201   _PSW            DATA 0xd0
0000            202   _REF0CN         DATA 0xd1
0000            203   _REG0CN         DATA 0xc9
0000            204   _REVID          DATA 0xb6
0000            205   _RSTSRC         DATA 0xef
0000            206   _SBCON1         DATA 0x94
0000            207   _SBRLH1         DATA 0x96
0000            208   _SBRLL1         DATA 0x95
0000            209   _SBUF           DATA 0x99
0000            210   _SBUF0          DATA 0x99
0000            211   _SBUF1          DATA 0x92
0000            212   _SCON           DATA 0x98
0000            213   _SCON0          DATA 0x98
0000            214   _SCON1          DATA 0xc8
0000            215   _SFRPAGE        DATA 0xa7
0000            216   _SFRPGCN        DATA 0xbc
0000            217   _SFRSTACK       DATA 0xd7
0000            218   _SMB0ADM        DATA 0xd6
0000            219   _SMB0ADR        DATA 0xd7
0000            220   _SMB0CF         DATA 0xc1
0000            221   _SMB0CN0        DATA 0xc0
0000            222   _SMB0DAT        DATA 0xc2
0000            223   _SMB0FCN0       DATA 0xc3
0000            224   _SMB0FCN1       DATA 0xc4
0000            225   _SMB0FCT        DATA 0xef
0000            226   _SMB0RXLN       DATA 0xc5
0000            227   _SMB0TC         DATA 0xac
0000            228   _SMOD1          DATA 0x93
0000            229   _SP             DATA 0x81
0000            230   _SPI0CFG        DATA 0xa1
0000            231   _SPI0CKR        DATA 0xa2
0000            232   _SPI0CN0        DATA 0xf8
0000            233   _SPI0DAT        DATA 0xa3
0000            234   _SPI0FCN0       DATA 0x9a
0000            235   _SPI0FCN1       DATA 0x9b
0000            236   _SPI0FCT        DATA 0xf7
0000            237   _SPI0PCF        DATA 0xdf
0000            238   _TCON           DATA 0x88
0000            239   _TH0            DATA 0x8c
0000            240   _TH1            DATA 0x8d
0000            241   _TL0            DATA 0x8a
0000            242   _TL1            DATA 0x8b
0000            243   _TMOD           DATA 0x89
0000            244   _TMR2CN0        DATA 0xc8
0000            245   _TMR2CN1        DATA 0xfd
0000            246   _TMR2H          DATA 0xcf
0000            247   _TMR2L          DATA 0xce
0000            248   _TMR2RLH        DATA 0xcb
0000            249   _TMR2RLL        DATA 0xca
0000            250   _TMR3CN0        DATA 0x91
0000            251   _TMR3CN1        DATA 0xfe
0000            252   _TMR3H          DATA 0x95
0000            253   _TMR3L          DATA 0x94
0000            254   _TMR3RLH        DATA 0x93
0000            255   _TMR3RLL        DATA 0x92
0000            256   _TMR4CN0        DATA 0x98
0000            257   _TMR4CN1        DATA 0xff
0000            258   _TMR4H          DATA 0xa5
0000            259   _TMR4L          DATA 0xa4
0000            260   _TMR4RLH        DATA 0xa3
0000            261   _TMR4RLL        DATA 0xa2
0000            262   _TMR5CN0        DATA 0xc0
0000            263   _TMR5CN1        DATA 0xf1
0000            264   _TMR5H          DATA 0xd5
0000            265   _TMR5L          DATA 0xd4
0000            266   _TMR5RLH        DATA 0xd3
0000            267   _TMR5RLL        DATA 0xd2
0000            268   _UART0PCF       DATA 0xd9
0000            269   _UART1FCN0      DATA 0x9d
0000            270   _UART1FCN1      DATA 0xd8
0000            271   _UART1FCT       DATA 0xfa
0000            272   _UART1LIN       DATA 0x9e
0000            273   _UART1PCF       DATA 0xda
0000            274   _VDM0CN         DATA 0xff
0000            275   _WDTCN          DATA 0x97
0000            276   _XBR0           DATA 0xe1
0000            277   _XBR1           DATA 0xe2
0000            278   _XBR2           DATA 0xe3
0000            279   _XOSC0CN        DATA 0x86
0000            280   _DPTR           DATA 0x8382
0000            281   _TMR2RL         DATA 0xcbca
0000            282   _TMR3RL         DATA 0x9392
0000            283   _TMR4RL         DATA 0xa3a2
0000            284   _TMR5RL         DATA 0xd3d2
0000            285   _TMR0           DATA 0x8c8a
0000            286   _TMR1           DATA 0x8d8b
0000            287   _TMR2           DATA 0xcfce
0000            288   _TMR3           DATA 0x9594
0000            289   _TMR4           DATA 0xa5a4
0000            290   _TMR5           DATA 0xd5d4
0000            291   _SBRL1          DATA 0x9695
0000            292   _PCA0           DATA 0xfaf9
0000            293   _PCA0CP0        DATA 0xfcfb
0000            294   _PCA0CP1        DATA 0xeae9
0000            295   _PCA0CP2        DATA 0xeceb
0000            296   _PCA0CP3        DATA 0xf5f4
0000            297   _PCA0CP4        DATA 0x8584
0000            298   _PCA0CP5        DATA 0xdedd
0000            299   _ADC0ASA        DATA 0xb6b5
0000            300   _ADC0GT         DATA 0xc4c3
0000            301   _ADC0           DATA 0xbebd
0000            302   _ADC0LT         DATA 0xc6c5
0000            303   _DAC0           DATA 0x8584
0000            304   _DAC1           DATA 0x8a89
0000            305   _DAC2           DATA 0x8c8b
0000            306   _DAC3           DATA 0x8e8d
0000            307   ;--------------------------------------------------------
0000            308   ; special function bits
0000            309   ;--------------------------------------------------------
0000            310   _ACC_0          BIT 0xe0
0000            311   _ACC_1          BIT 0xe1
0000            312   _ACC_2          BIT 0xe2
0000            313   _ACC_3          BIT 0xe3
0000            314   _ACC_4          BIT 0xe4
0000            315   _ACC_5          BIT 0xe5
0000            316   _ACC_6          BIT 0xe6
0000            317   _ACC_7          BIT 0xe7
0000            318   _TEMPE          BIT 0xe8
0000            319   _ADGN0          BIT 0xe9
0000            320   _ADGN1          BIT 0xea
0000            321   _ADWINT         BIT 0xeb
0000            322   _ADBUSY         BIT 0xec
0000            323   _ADINT          BIT 0xed
0000            324   _IPOEN          BIT 0xee
0000            325   _ADEN           BIT 0xef
0000            326   _B_0            BIT 0xf0
0000            327   _B_1            BIT 0xf1
0000            328   _B_2            BIT 0xf2
0000            329   _B_3            BIT 0xf3
0000            330   _B_4            BIT 0xf4
0000            331   _B_5            BIT 0xf5
0000            332   _B_6            BIT 0xf6
0000            333   _B_7            BIT 0xf7
0000            334   _C0FIF          BIT 0xe8
0000            335   _C0RIF          BIT 0xe9
0000            336   _C1FIF          BIT 0xea
0000            337   _C1RIF          BIT 0xeb
0000            338   _C2FIF          BIT 0xec
0000            339   _C2RIF          BIT 0xed
0000            340   _C3FIF          BIT 0xee
0000            341   _C3RIF          BIT 0xef
0000            342   _D1SRC0         BIT 0x88
0000            343   _D1SRC1         BIT 0x89
0000            344   _D1AMEN         BIT 0x8a
0000            345   _D01REFSL       BIT 0x8b
0000            346   _D3SRC0         BIT 0x8c
0000            347   _D3SRC1         BIT 0x8d
0000            348   _D3AMEN         BIT 0x8e
0000            349   _D23REFSL       BIT 0x8f
0000            350   _D0UDIS         BIT 0x98
0000            351   _D1UDIS         BIT 0x99
0000            352   _D2UDIS         BIT 0x9a
0000            353   _D3UDIS         BIT 0x9b
0000            354   _EX0            BIT 0xa8
0000            355   _ET0            BIT 0xa9
0000            356   _EX1            BIT 0xaa
0000            357   _ET1            BIT 0xab
0000            358   _ES0            BIT 0xac
0000            359   _ET2            BIT 0xad
0000            360   _ESPI0          BIT 0xae
0000            361   _EA             BIT 0xaf
0000            362   _PX0            BIT 0xb8
0000            363   _PT0            BIT 0xb9
0000            364   _PX1            BIT 0xba
0000            365   _PT1            BIT 0xbb
0000            366   _PS0            BIT 0xbc
0000            367   _PT2            BIT 0xbd
0000            368   _PSPI0          BIT 0xbe
0000            369   _P0_0           BIT 0x80
0000            370   _P0_1           BIT 0x81
0000            371   _P0_2           BIT 0x82
0000            372   _P0_3           BIT 0x83
0000            373   _P0_4           BIT 0x84
0000            374   _P0_5           BIT 0x85
0000            375   _P0_6           BIT 0x86
0000            376   _P0_7           BIT 0x87
0000            377   _P1_0           BIT 0x90
0000            378   _P1_1           BIT 0x91
0000            379   _P1_2           BIT 0x92
0000            380   _P1_3           BIT 0x93
0000            381   _P1_4           BIT 0x94
0000            382   _P1_5           BIT 0x95
0000            383   _P1_6           BIT 0x96
0000            384   _P1_7           BIT 0x97
0000            385   _P2_0           BIT 0xa0
0000            386   _P2_1           BIT 0xa1
0000            387   _P2_2           BIT 0xa2
0000            388   _P2_3           BIT 0xa3
0000            389   _P2_4           BIT 0xa4
0000            390   _P2_5           BIT 0xa5
0000            391   _P2_6           BIT 0xa6
0000            392   _P3_0           BIT 0xb0
0000            393   _P3_1           BIT 0xb1
0000            394   _P3_2           BIT 0xb2
0000            395   _P3_3           BIT 0xb3
0000            396   _P3_4           BIT 0xb4
0000            397   _P3_7           BIT 0xb7
0000            398   _CCF0           BIT 0xd8
0000            399   _CCF1           BIT 0xd9
0000            400   _CCF2           BIT 0xda
0000            401   _CCF3           BIT 0xdb
0000            402   _CCF4           BIT 0xdc
0000            403   _CCF5           BIT 0xdd
0000            404   _CR             BIT 0xde
0000            405   _CF             BIT 0xdf
0000            406   _PARITY         BIT 0xd0
0000            407   _F1             BIT 0xd1
0000            408   _OV             BIT 0xd2
0000            409   _RS0            BIT 0xd3
0000            410   _RS1            BIT 0xd4
0000            411   _F0             BIT 0xd5
0000            412   _AC             BIT 0xd6
0000            413   _CY             BIT 0xd7
0000            414   _RI             BIT 0x98
0000            415   _TI             BIT 0x99
0000            416   _RB8            BIT 0x9a
0000            417   _TB8            BIT 0x9b
0000            418   _REN            BIT 0x9c
0000            419   _CE             BIT 0x9d
0000            420   _SMODE          BIT 0x9e
0000            421   _RI1            BIT 0xc8
0000            422   _TI1            BIT 0xc9
0000            423   _RBX1           BIT 0xca
0000            424   _TBX1           BIT 0xcb
0000            425   _REN1           BIT 0xcc
0000            426   _PERR1          BIT 0xcd
0000            427   _OVR1           BIT 0xce
0000            428   _SI             BIT 0xc0
0000            429   _ACK            BIT 0xc1
0000            430   _ARBLOST        BIT 0xc2
0000            431   _ACKRQ          BIT 0xc3
0000            432   _STO            BIT 0xc4
0000            433   _STA            BIT 0xc5
0000            434   _TXMODE         BIT 0xc6
0000            435   _MASTER         BIT 0xc7
0000            436   _SPIEN          BIT 0xf8
0000            437   _TXNF           BIT 0xf9
0000            438   _NSSMD0         BIT 0xfa
0000            439   _NSSMD1         BIT 0xfb
0000            440   _RXOVRN         BIT 0xfc
0000            441   _MODF           BIT 0xfd
0000            442   _WCOL           BIT 0xfe
0000            443   _SPIF           BIT 0xff
0000            444   _IT0            BIT 0x88
0000            445   _IE0            BIT 0x89
0000            446   _IT1            BIT 0x8a
0000            447   _IE1            BIT 0x8b
0000            448   _TR0            BIT 0x8c
0000            449   _TF0            BIT 0x8d
0000            450   _TR1            BIT 0x8e
0000            451   _TF1            BIT 0x8f
0000            452   _T2XCLK0        BIT 0xc8
0000            453   _T2XCLK1        BIT 0xc9
0000            454   _TR2            BIT 0xca
0000            455   _T2SPLIT        BIT 0xcb
0000            456   _TF2CEN         BIT 0xcc
0000            457   _TF2LEN         BIT 0xcd
0000            458   _TF2L           BIT 0xce
0000            459   _TF2H           BIT 0xcf
0000            460   _T4XCLK0        BIT 0x98
0000            461   _T4XCLK1        BIT 0x99
0000            462   _TR4            BIT 0x9a
0000            463   _T4SPLIT        BIT 0x9b
0000            464   _TF4CEN         BIT 0x9c
0000            465   _TF4LEN         BIT 0x9d
0000            466   _TF4L           BIT 0x9e
0000            467   _TF4H           BIT 0x9f
0000            468   _T5XCLK0        BIT 0xc0
0000            469   _T5XCLK1        BIT 0xc1
0000            470   _TR5            BIT 0xc2
0000            471   _T5SPLIT        BIT 0xc3
0000            472   _TF5CEN         BIT 0xc4
0000            473   _TF5LEN         BIT 0xc5
0000            474   _TF5L           BIT 0xc6
0000            475   _TF5H           BIT 0xc7
0000            476   _RIE            BIT 0xd8
0000            477   _RXTO0          BIT 0xd9
0000            478   _RXTO1          BIT 0xda
0000            479   _RFRQ           BIT 0xdb
0000            480   _TIE            BIT 0xdc
0000            481   _TXHOLD         BIT 0xdd
0000            482   _TXNF1          BIT 0xde
0000            483   _TFRQ           BIT 0xdf
0000            484   ;--------------------------------------------------------
0000            485   ; overlayable register banks
0000            486   ;--------------------------------------------------------
0000            487            rbank0 segment data overlay
0000            488   ;--------------------------------------------------------
0000            489   ; internal ram data
0000            490   ;--------------------------------------------------------
0000            491            rseg R_DSEG
0000            492   _overflow_count:
0000            493            ds 1
0001            494   _capacitance:
0001            495            ds 4
0005            496   _LCDprint_PARM_2:
0005            497            ds 1
0006            498   _getsn_PARM_2:
0006            499            ds 2
0008            500   _getsn_buff_1_68:
0008            501            ds 3
000B            502   _getsn_sloc0_1_0:
000B            503            ds 2
000D            504   _main_buff_1_74:
000D            505            ds 17
001E            506   ;--------------------------------------------------------
001E            507   ; overlayable items in internal ram 
001E            508   ;--------------------------------------------------------
0000            509            rseg    R_OSEG
0000            510   ;--------------------------------------------------------
0000            511   ; indirectly addressable internal ram data
0000            512   ;--------------------------------------------------------
0000            513            rseg R_ISEG
0000            514   ;--------------------------------------------------------
0000            515   ; absolute internal ram data
0000            516   ;--------------------------------------------------------
0000            517            DSEG
0000            518   ;--------------------------------------------------------
0000            519   ; bit data
0000            520   ;--------------------------------------------------------
0000            521            rseg R_BSEG
0000            522   _LCDprint_PARM_3:
0000            523            DBIT    1
0001            524   ;--------------------------------------------------------
0001            525   ; paged external ram data
0001            526   ;--------------------------------------------------------
0000            527            rseg R_PSEG
0000            528   ;--------------------------------------------------------
0000            529   ; external ram data
0000            530   ;--------------------------------------------------------
0000            531            rseg R_XSEG
0000            532   ;--------------------------------------------------------
0000            533   ; absolute external ram data
0000            534   ;--------------------------------------------------------
0000            535            XSEG
0000            536   ;--------------------------------------------------------
0000            537   ; external initialized ram data
0000            538   ;--------------------------------------------------------
0000            539            rseg R_IXSEG
0000            540            rseg R_HOME
0000            541            rseg R_GSINIT
0000            542            rseg R_CSEG
0000            543   ;--------------------------------------------------------
0000            544   ; Reset entry point and interrupt vectors
0000            545   ;--------------------------------------------------------
0000            546            CSEG at 0x0000
0000 020000     547            ljmp    _crt0
0003            548   ;--------------------------------------------------------
0003            549   ; global & static initialisations
0003            550   ;--------------------------------------------------------
0000            551            rseg R_HOME
0000            552            rseg R_GSINIT
0000            553            rseg R_GSINIT
0000            554   ;--------------------------------------------------------
0000            555   ; data variables initialization
0000            556   ;--------------------------------------------------------
0000            557            rseg R_DINIT
0000            558            ; The linker places a 'ret' at the end of segment R_DINIT.
0000            559   ;--------------------------------------------------------
0000            560   ; code
0000            561   ;--------------------------------------------------------
0000            562            rseg R_CSEG
0000            563   ;------------------------------------------------------------
0000            564   ;Allocation info for local variables in function '_c51_external_startup'
0000            565   ;------------------------------------------------------------
0000            566   ;------------------------------------------------------------
0000            567   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:27: char _c51_external_startup (void)
0000            568   ;        -----------------------------------------
0000            569   ;         function _c51_external_startup
0000            570   ;        -----------------------------------------
0000            571   __c51_external_startup:
0000            572            using   0
0000            573   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:30: SFRPAGE = 0x00;
0000 75A700     574            mov     _SFRPAGE,#0x00
0003            575   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:31: WDTCN = 0xDE; //First key
0003 7597DE     576            mov     _WDTCN,#0xDE
0006            577   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:32: WDTCN = 0xAD; //Second key
0006 7597AD     578            mov     _WDTCN,#0xAD
0009            579   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:34: VDM0CN |= 0x80;
0009 43FF80     580            orl     _VDM0CN,#0x80
000C            581   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:35: RSTSRC = 0x02;
000C 75EF02     582            mov     _RSTSRC,#0x02
000F            583   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:42: SFRPAGE = 0x10;
000F 75A710     584            mov     _SFRPAGE,#0x10
0012            585   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:43: PFE0CN  = 0x20; // SYSCLK < 75 MHz.
0012 75C120     586            mov     _PFE0CN,#0x20
0015            587   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:44: SFRPAGE = 0x00;
0015 75A700     588            mov     _SFRPAGE,#0x00
0018            589   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:65: CLKSEL = 0x00;
0018 75A900     590            mov     _CLKSEL,#0x00
001B            591   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:66: CLKSEL = 0x00;
001B 75A900     592            mov     _CLKSEL,#0x00
001E            593   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:67: while ((CLKSEL & 0x80) == 0);
001E            594   L002001?:
001E E5A9       595            mov     a,_CLKSEL
0020 30E7C8     596            jnb     acc.7,L002001?
0023            597   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:68: CLKSEL = 0x03;
0023 75A903     598            mov     _CLKSEL,#0x03
0026            599   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:69: CLKSEL = 0x03;
0026 75A903     600            mov     _CLKSEL,#0x03
0029            601   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:70: while ((CLKSEL & 0x80) == 0);
0029            602   L002004?:
0029 E5A9       603            mov     a,_CLKSEL
002B 30E748     604            jnb     acc.7,L002004?
002E            605   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:75: P0MDOUT |= 0x10; // Enable UART0 TX as push-pull output
002E 43A410     606            orl     _P0MDOUT,#0x10
0031            607   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:76: XBR0     = 0x01; // Enable UART0 on P0.4(TX) and P0.5(RX)                     
0031 75E101     608            mov     _XBR0,#0x01
0034            609   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:77: XBR1     = 0X10; // Enable T0 on P0.0
0034 75E210     610            mov     _XBR1,#0x10
0037            611   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:78: XBR2     = 0x40; // Enable crossbar and weak pull-ups
0037 75E340     612            mov     _XBR2,#0x40
003A            613   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:84: SCON0 = 0x10;
003A 759810     614            mov     _SCON0,#0x10
003D            615   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:85: CKCON0 |= 0b_0000_0000 ; // Timer 1 uses the system clock divided by 12.
003D 858E8E     616            mov     _CKCON0,_CKCON0
0040            617   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:86: TH1 = 0x100-((SYSCLK/BAUDRATE)/(2L*12L));
0040 758DE6     618            mov     _TH1,#0xE6
0043            619   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:87: TL1 = TH1;      // Init Timer1
0043 858D8B     620            mov     _TL1,_TH1
0046            621   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:88: TMOD &= ~0xf0;  // TMOD: timer 1 in 8-bit auto-reload
0046 53890F     622            anl     _TMOD,#0x0F
0049            623   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:89: TMOD |=  0x20;                       
0049 438920     624            orl     _TMOD,#0x20
004C            625   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:90: TR1 = 1; // START Timer1
004C D28E       626            setb    _TR1
004E            627   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:91: TI = 1;  // Indicate TX0 ready
004E D299       628            setb    _TI
0050            629   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:93: return 0;
0050 758200     630            mov     dpl,#0x00
0053 22         631            ret
0054            632   ;------------------------------------------------------------
0054            633   ;Allocation info for local variables in function 'Timer3us'
0054            634   ;------------------------------------------------------------
0054            635   ;us                        Allocated to registers r2 
0054            636   ;i                         Allocated to registers r3 
0054            637   ;------------------------------------------------------------
0054            638   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:97: void Timer3us(unsigned char us)
0054            639   ;        -----------------------------------------
0054            640   ;         function Timer3us
0054            641   ;        -----------------------------------------
0054            642   _Timer3us:
0054 AA82       643            mov     r2,dpl
0056            644   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:102: CKCON0|=0b_0100_0000;
0056 438E40     645            orl     _CKCON0,#0x40
0059            646   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:104: TMR3RL = (-(SYSCLK)/1000000L); // Set Timer3 to overflow in 1us.
0059 7592B8     647            mov     _TMR3RL,#0xB8
005C 7593FF     648            mov     (_TMR3RL >> 8),#0xFF
005F            649   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:105: TMR3 = TMR3RL;                 // Initialize Timer3 for first overflow
005F 859294     650            mov     _TMR3,_TMR3RL
0062 859395     651            mov     (_TMR3 >> 8),(_TMR3RL >> 8)
0065            652   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:107: TMR3CN0 = 0x04;                 // Sart Timer3 and clear overflow flag
0065 759104     653            mov     _TMR3CN0,#0x04
0068            654   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:108: for (i = 0; i < us; i++)       // Count <us> overflows
0068 7B00       655            mov     r3,#0x00
006A            656   L003006?:
006A C3         657            clr     c
006B EB         658            mov     a,r3
006C 9A         659            subb    a,r2
006D 5000       660            jnc     L003009?
006F            661   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:110: while (!(TMR3CN0 & 0x80));  // Wait for overflow
006F            662   L003001?:
006F E591       663            mov     a,_TMR3CN0
0071 30E748     664            jnb     acc.7,L003001?
0074            665   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:111: TMR3CN0 &= ~(0x80);         // Clear overflow indicator
0074 53917F     666            anl     _TMR3CN0,#0x7F
0077            667   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:112: if (TF0)
0077            668   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:114: TF0=0;
0077 108D88     669            jbc     _TF0,L003019?
007A 8000       670            sjmp    L003008?
007C            671   L003019?:
007C            672   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:115: overflow_count++;
007C 05A0       673            inc     _overflow_count
007E            674   L003008?:
007E            675   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:108: for (i = 0; i < us; i++)       // Count <us> overflows
007E 0B         676            inc     r3
007F 8000       677            sjmp    L003006?
0081            678   L003009?:
0081            679   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:118: TMR3CN0 = 0 ;                   // Stop Timer3 and clear overflow flag
0081 759100     680            mov     _TMR3CN0,#0x00
0084 22         681            ret
0085            682   ;------------------------------------------------------------
0085            683   ;Allocation info for local variables in function 'waitms'
0085            684   ;------------------------------------------------------------
0085            685   ;ms                        Allocated to registers r2 r3 
0085            686   ;j                         Allocated to registers r2 r3 
0085            687   ;------------------------------------------------------------
0085            688   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:121: void waitms (unsigned int ms)
0085            689   ;        -----------------------------------------
0085            690   ;         function waitms
0085            691   ;        -----------------------------------------
0085            692   _waitms:
0085 AA82       693            mov     r2,dpl
0087 AB83       694            mov     r3,dph
0089            695   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:124: for(j=ms; j!=0; j--)
0089            696   L004001?:
0089 BA0088     697            cjne    r2,#0x00,L004010?
008C BB0088     698            cjne    r3,#0x00,L004010?
008F 22         699            ret
0090            700   L004010?:
0090            701   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:126: Timer3us(249);
0090 7582F9     702            mov     dpl,#0xF9
0093 C002       703            push    ar2
0095 C003       704            push    ar3
0097 120000     705            lcall   _Timer3us
009A            706   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:127: Timer3us(249);
009A 7582F9     707            mov     dpl,#0xF9
009D 120000     708            lcall   _Timer3us
00A0            709   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:128: Timer3us(249);
00A0 7582F9     710            mov     dpl,#0xF9
00A3 120000     711            lcall   _Timer3us
00A6            712   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:129: Timer3us(250);
00A6 7582FA     713            mov     dpl,#0xFA
00A9 120000     714            lcall   _Timer3us
00AC D003       715            pop     ar3
00AE D002       716            pop     ar2
00B0            717   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:124: for(j=ms; j!=0; j--)
00B0 1A         718            dec     r2
00B1 BAFFC8     719            cjne    r2,#0xff,L004011?
00B4 1B         720            dec     r3
00B5            721   L004011?:
00B5 8000       722            sjmp    L004001?
00B7            723   ;------------------------------------------------------------
00B7            724   ;Allocation info for local variables in function 'TIMER0_Init'
00B7            725   ;------------------------------------------------------------
00B7            726   ;------------------------------------------------------------
00B7            727   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:133: void TIMER0_Init(void)
00B7            728   ;        -----------------------------------------
00B7            729   ;         function TIMER0_Init
00B7            730   ;        -----------------------------------------
00B7            731   _TIMER0_Init:
00B7            732   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:135: TMOD&=0b_1111_0000; // Set the bits of Timer/Counter 0 to zero
00B7 5389F0     733            anl     _TMOD,#0xF0
00BA            734   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:136: TMOD|=0b_0000_0101; // Timer/Counter 0 used as a 16-bit counter
00BA 438905     735            orl     _TMOD,#0x05
00BD            736   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:137: TR0=0; // Stop Timer/Counter 0
00BD C28C       737            clr     _TR0
00BF 22         738            ret
00C0            739   ;------------------------------------------------------------
00C0            740   ;Allocation info for local variables in function 'LCD_pulse'
00C0            741   ;------------------------------------------------------------
00C0            742   ;------------------------------------------------------------
00C0            743   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:139: void LCD_pulse(void)
00C0            744   ;        -----------------------------------------
00C0            745   ;         function LCD_pulse
00C0            746   ;        -----------------------------------------
00C0            747   _LCD_pulse:
00C0            748   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:141: LCD_E = 1;
00C0 D2A5       749            setb    _P2_5
00C2            750   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:142: Timer3us(40);
00C2 758228     751            mov     dpl,#0x28
00C5 120000     752            lcall   _Timer3us
00C8            753   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:143: LCD_E = 0;
00C8 C2A5       754            clr     _P2_5
00CA 22         755            ret
00CB            756   ;------------------------------------------------------------
00CB            757   ;Allocation info for local variables in function 'LCD_byte'
00CB            758   ;------------------------------------------------------------
00CB            759   ;x                         Allocated to registers r2 
00CB            760   ;------------------------------------------------------------
00CB            761   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:146: void LCD_byte(unsigned char x)
00CB            762   ;        -----------------------------------------
00CB            763   ;         function LCD_byte
00CB            764   ;        -----------------------------------------
00CB            765   _LCD_byte:
00CB AA82       766            mov     r2,dpl
00CD            767   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:149: ACC = x; //Send high nible
00CD 8AE0       768            mov     _ACC,r2
00CF            769   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:150: LCD_D7 = ACC_7;
00CF A2E7       770            mov     c,_ACC_7
00D1 92A1       771            mov     _P2_1,c
00D3            772   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:151: LCD_D6 = ACC_6;
00D3 A2E6       773            mov     c,_ACC_6
00D5 92A2       774            mov     _P2_2,c
00D7            775   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:152: LCD_D5 = ACC_5;
00D7 A2E5       776            mov     c,_ACC_5
00D9 92A3       777            mov     _P2_3,c
00DB            778   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:153: LCD_D4 = ACC_4;
00DB A2E4       779            mov     c,_ACC_4
00DD 92A4       780            mov     _P2_4,c
00DF            781   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:154: LCD_pulse();
00DF C002       782            push    ar2
00E1 120000     783            lcall   _LCD_pulse
00E4            784   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:155: Timer3us(40);
00E4 758228     785            mov     dpl,#0x28
00E7 120000     786            lcall   _Timer3us
00EA D002       787            pop     ar2
00EC            788   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:156: ACC = x; //Send low nible
00EC 8AE0       789            mov     _ACC,r2
00EE            790   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:157: LCD_D7 = ACC_3;
00EE A2E3       791            mov     c,_ACC_3
00F0 92A1       792            mov     _P2_1,c
00F2            793   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:158: LCD_D6 = ACC_2;
00F2 A2E2       794            mov     c,_ACC_2
00F4 92A2       795            mov     _P2_2,c
00F6            796   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:159: LCD_D5 = ACC_1;
00F6 A2E1       797            mov     c,_ACC_1
00F8 92A3       798            mov     _P2_3,c
00FA            799   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:160: LCD_D4 = ACC_0;
00FA A2E0       800            mov     c,_ACC_0
00FC 92A4       801            mov     _P2_4,c
00FE            802   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:161: LCD_pulse();
00FE 020000     803            ljmp    _LCD_pulse
0101            804   ;------------------------------------------------------------
0101            805   ;Allocation info for local variables in function 'WriteData'
0101            806   ;------------------------------------------------------------
0101            807   ;x                         Allocated to registers r2 
0101            808   ;------------------------------------------------------------
0101            809   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:164: void WriteData(unsigned char x)
0101            810   ;        -----------------------------------------
0101            811   ;         function WriteData
0101            812   ;        -----------------------------------------
0101            813   _WriteData:
0101 AA82       814            mov     r2,dpl
0103            815   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:166: LCD_RS = 1;
0103 D2A6       816            setb    _P2_6
0105            817   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:167: LCD_byte(x);
0105 8A82       818            mov     dpl,r2
0107 120000     819            lcall   _LCD_byte
010A            820   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:168: waitms(2);
010A 900002     821            mov     dptr,#0x0002
010D 020000     822            ljmp    _waitms
0110            823   ;------------------------------------------------------------
0110            824   ;Allocation info for local variables in function 'WriteCommand'
0110            825   ;------------------------------------------------------------
0110            826   ;x                         Allocated to registers r2 
0110            827   ;------------------------------------------------------------
0110            828   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:171: void WriteCommand(unsigned char x)
0110            829   ;        -----------------------------------------
0110            830   ;         function WriteCommand
0110            831   ;        -----------------------------------------
0110            832   _WriteCommand:
0110 AA82       833            mov     r2,dpl
0112            834   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:173: LCD_RS = 0;
0112 C2A6       835            clr     _P2_6
0114            836   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:174: LCD_byte(x);
0114 8A82       837            mov     dpl,r2
0116 120000     838            lcall   _LCD_byte
0119            839   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:175: waitms(5);
0119 900005     840            mov     dptr,#0x0005
011C 020000     841            ljmp    _waitms
011F            842   ;------------------------------------------------------------
011F            843   ;Allocation info for local variables in function 'LCD_4BIT'
011F            844   ;------------------------------------------------------------
011F            845   ;------------------------------------------------------------
011F            846   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:178: void LCD_4BIT(void)
011F            847   ;        -----------------------------------------
011F            848   ;         function LCD_4BIT
011F            849   ;        -----------------------------------------
011F            850   _LCD_4BIT:
011F            851   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:180: LCD_E = 0; // Resting state of LCD's enable is zero
011F C2A5       852            clr     _P2_5
0121            853   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:182: waitms(20);
0121 900014     854            mov     dptr,#0x0014
0124 120000     855            lcall   _waitms
0127            856   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:184: WriteCommand(0x33);
0127 758233     857            mov     dpl,#0x33
012A 120000     858            lcall   _WriteCommand
012D            859   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:185: WriteCommand(0x33);
012D 758233     860            mov     dpl,#0x33
0130 120000     861            lcall   _WriteCommand
0133            862   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:186: WriteCommand(0x32); // Change to 4-bit mode
0133 758232     863            mov     dpl,#0x32
0136 120000     864            lcall   _WriteCommand
0139            865   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:189: WriteCommand(0x28);
0139 758228     866            mov     dpl,#0x28
013C 120000     867            lcall   _WriteCommand
013F            868   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:190: WriteCommand(0x0c);
013F 75820C     869            mov     dpl,#0x0C
0142 120000     870            lcall   _WriteCommand
0145            871   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:191: WriteCommand(0x01); // Clear screen command (takes some time)
0145 758201     872            mov     dpl,#0x01
0148 120000     873            lcall   _WriteCommand
014B            874   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:192: waitms(20); // Wait for clear screen command to finsih.
014B 900014     875            mov     dptr,#0x0014
014E 020000     876            ljmp    _waitms
0151            877   ;------------------------------------------------------------
0151            878   ;Allocation info for local variables in function 'LCDprint'
0151            879   ;------------------------------------------------------------
0151            880   ;line                      Allocated with name '_LCDprint_PARM_2'
0151            881   ;string                    Allocated to registers r2 r3 r4 
0151            882   ;j                         Allocated to registers r5 r6 
0151            883   ;------------------------------------------------------------
0151            884   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:195: void LCDprint(char* string, unsigned char line, bit clear)
0151            885   ;        -----------------------------------------
0151            886   ;         function LCDprint
0151            887   ;        -----------------------------------------
0151            888   _LCDprint:
0151 AA82       889            mov     r2,dpl
0153 AB83       890            mov     r3,dph
0155 ACF0       891            mov     r4,b
0157            892   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:199: WriteCommand(line == 2 ? 0xc0 : 0x80);
0157 7402       893            mov     a,#0x02
0159 B52048     894            cjne    a,_LCDprint_PARM_2,L011013?
015C 7DC0       895            mov     r5,#0xC0
015E 8000       896            sjmp    L011014?
0160            897   L011013?:
0160 7D80       898            mov     r5,#0x80
0162            899   L011014?:
0162 8D82       900            mov     dpl,r5
0164 C002       901            push    ar2
0166 C003       902            push    ar3
0168 C004       903            push    ar4
016A 120000     904            lcall   _WriteCommand
016D            905   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:200: waitms(5);
016D 900005     906            mov     dptr,#0x0005
0170 120000     907            lcall   _waitms
0173 D004       908            pop     ar4
0175 D003       909            pop     ar3
0177 D002       910            pop     ar2
0179            911   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:201: for (j = 0; string[j] != 0; j++)   WriteData(string[j]);// Write the message
0179 7D00       912            mov     r5,#0x00
017B 7E00       913            mov     r6,#0x00
017D            914   L011003?:
017D ED         915            mov     a,r5
017E 2A         916            add     a,r2
017F FF         917            mov     r7,a
0180 EE         918            mov     a,r6
0181 3B         919            addc    a,r3
0182 F8         920            mov     r0,a
0183 8C01       921            mov     ar1,r4
0185 8F82       922            mov     dpl,r7
0187 8883       923            mov     dph,r0
0189 89F0       924            mov     b,r1
018B 120000     925            lcall   __gptrget
018E FF         926            mov     r7,a
018F 6000       927            jz      L011006?
0191 8F82       928            mov     dpl,r7
0193 C002       929            push    ar2
0195 C003       930            push    ar3
0197 C004       931            push    ar4
0199 C005       932            push    ar5
019B C006       933            push    ar6
019D 120000     934            lcall   _WriteData
01A0 D006       935            pop     ar6
01A2 D005       936            pop     ar5
01A4 D004       937            pop     ar4
01A6 D003       938            pop     ar3
01A8 D002       939            pop     ar2
01AA 0D         940            inc     r5
01AB BD00C8     941            cjne    r5,#0x00,L011003?
01AE 0E         942            inc     r6
01AF 8000       943            sjmp    L011003?
01B1            944   L011006?:
01B1            945   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:202: if (clear) for (; j < CHARS_PER_LINE; j++) WriteData(' '); // Clear the rest of the line
01B1 309088     946            jnb     _LCDprint_PARM_3,L011011?
01B4 8D02       947            mov     ar2,r5
01B6 8E03       948            mov     ar3,r6
01B8            949   L011007?:
01B8 C3         950            clr     c
01B9 EA         951            mov     a,r2
01BA 9410       952            subb    a,#0x10
01BC EB         953            mov     a,r3
01BD 6480       954            xrl     a,#0x80
01BF 9480       955            subb    a,#0x80
01C1 5000       956            jnc     L011011?
01C3 758220     957            mov     dpl,#0x20
01C6 C002       958            push    ar2
01C8 C003       959            push    ar3
01CA 120000     960            lcall   _WriteData
01CD D003       961            pop     ar3
01CF D002       962            pop     ar2
01D1 0A         963            inc     r2
01D2 BA00C8     964            cjne    r2,#0x00,L011007?
01D5 0B         965            inc     r3
01D6 8000       966            sjmp    L011007?
01D8            967   L011011?:
01D8 22         968            ret
01D9            969   ;------------------------------------------------------------
01D9            970   ;Allocation info for local variables in function 'getsn'
01D9            971   ;------------------------------------------------------------
01D9            972   ;len                       Allocated with name '_getsn_PARM_2'
01D9            973   ;buff                      Allocated with name '_getsn_buff_1_68'
01D9            974   ;j                         Allocated with name '_getsn_sloc0_1_0'
01D9            975   ;c                         Allocated to registers r3 
01D9            976   ;sloc0                     Allocated with name '_getsn_sloc0_1_0'
01D9            977   ;------------------------------------------------------------
01D9            978   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:205: int getsn(char* buff, int len)
01D9            979   ;        -----------------------------------------
01D9            980   ;         function getsn
01D9            981   ;        -----------------------------------------
01D9            982   _getsn:
01D9 8582B8     983            mov     _getsn_buff_1_68,dpl
01DC 8583B9     984            mov     (_getsn_buff_1_68 + 1),dph
01DF 85F0BA     985            mov     (_getsn_buff_1_68 + 2),b
01E2            986   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:210: for (j = 0; j < (len - 1); j++)
01E2 E4         987            clr     a
01E3 F508       988            mov     _getsn_sloc0_1_0,a
01E5 F509       989            mov     (_getsn_sloc0_1_0 + 1),a
01E7 E5D0       990            mov     a,_getsn_PARM_2
01E9 24FF       991            add     a,#0xff
01EB FF         992            mov     r7,a
01EC E5D1       993            mov     a,(_getsn_PARM_2 + 1)
01EE 34FF       994            addc    a,#0xff
01F0 F8         995            mov     r0,a
01F1 7900       996            mov     r1,#0x00
01F3 7A00       997            mov     r2,#0x00
01F5            998   L012005?:
01F5 C3         999            clr     c
01F6 E9        1000            mov     a,r1
01F7 9F        1001            subb    a,r7
01F8 EA        1002            mov     a,r2
01F9 6480      1003            xrl     a,#0x80
01FB 88F0      1004            mov     b,r0
01FD 63F080    1005            xrl     b,#0x80
0200 95F0      1006            subb    a,b
0202 5000      1007            jnc     L012008?
0204           1008   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:212: c = getchar();
0204 C002      1009            push    ar2
0206 C007      1010            push    ar7
0208 C000      1011            push    ar0
020A C001      1012            push    ar1
020C 120000    1013            lcall   _getchar
020F AB82      1014            mov     r3,dpl
0211 D001      1015            pop     ar1
0213 D000      1016            pop     ar0
0215 D007      1017            pop     ar7
0217 D002      1018            pop     ar2
0219           1019   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:213: if ((c == '\n') || (c == '\r'))
0219 BB0AC8    1020            cjne    r3,#0x0A,L012015?
021C 8000      1021            sjmp    L012001?
021E           1022   L012015?:
021E BB0D48    1023            cjne    r3,#0x0D,L012002?
0221           1024   L012001?:
0221           1025   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:215: buff[j] = 0;
0221 E508      1026            mov     a,_getsn_sloc0_1_0
0223 25B8      1027            add     a,_getsn_buff_1_68
0225 FC        1028            mov     r4,a
0226 E509      1029            mov     a,(_getsn_sloc0_1_0 + 1)
0228 35B9      1030            addc    a,(_getsn_buff_1_68 + 1)
022A FD        1031            mov     r5,a
022B AEBA      1032            mov     r6,(_getsn_buff_1_68 + 2)
022D 8C82      1033            mov     dpl,r4
022F 8D83      1034            mov     dph,r5
0231 8EF0      1035            mov     b,r6
0233 E4        1036            clr     a
0234 120000    1037            lcall   __gptrput
0237           1038   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:216: return j;
0237 850882    1039            mov     dpl,_getsn_sloc0_1_0
023A 850983    1040            mov     dph,(_getsn_sloc0_1_0 + 1)
023D 22        1041            ret
023E           1042   L012002?:
023E           1043   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:220: buff[j] = c;
023E E9        1044            mov     a,r1
023F 25B8      1045            add     a,_getsn_buff_1_68
0241 FC        1046            mov     r4,a
0242 EA        1047            mov     a,r2
0243 35B9      1048            addc    a,(_getsn_buff_1_68 + 1)
0245 FD        1049            mov     r5,a
0246 AEBA      1050            mov     r6,(_getsn_buff_1_68 + 2)
0248 8C82      1051            mov     dpl,r4
024A 8D83      1052            mov     dph,r5
024C 8EF0      1053            mov     b,r6
024E EB        1054            mov     a,r3
024F 120000    1055            lcall   __gptrput
0252           1056   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:210: for (j = 0; j < (len - 1); j++)
0252 09        1057            inc     r1
0253 B900C8    1058            cjne    r1,#0x00,L012018?
0256 0A        1059            inc     r2
0257           1060   L012018?:
0257 8908      1061            mov     _getsn_sloc0_1_0,r1
0259 8A09      1062            mov     (_getsn_sloc0_1_0 + 1),r2
025B 8000      1063            sjmp    L012005?
025D           1064   L012008?:
025D           1065   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:223: buff[j] = 0;
025D E508      1066            mov     a,_getsn_sloc0_1_0
025F 25B8      1067            add     a,_getsn_buff_1_68
0261 FA        1068            mov     r2,a
0262 E509      1069            mov     a,(_getsn_sloc0_1_0 + 1)
0264 35B9      1070            addc    a,(_getsn_buff_1_68 + 1)
0266 FB        1071            mov     r3,a
0267 ACBA      1072            mov     r4,(_getsn_buff_1_68 + 2)
0269 8A82      1073            mov     dpl,r2
026B 8B83      1074            mov     dph,r3
026D 8CF0      1075            mov     b,r4
026F E4        1076            clr     a
0270 120000    1077            lcall   __gptrput
0273           1078   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:224: return len;
0273 85D082    1079            mov     dpl,_getsn_PARM_2
0276 85D183    1080            mov     dph,(_getsn_PARM_2 + 1)
0279 22        1081            ret
027A           1082   ;------------------------------------------------------------
027A           1083   ;Allocation info for local variables in function 'main'
027A           1084   ;------------------------------------------------------------
027A           1085   ;F                         Allocated to registers r2 r3 r4 r5 
027A           1086   ;buff                      Allocated with name '_main_buff_1_74'
027A           1087   ;------------------------------------------------------------
027A           1088   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:227: void main (void) 
027A           1089   ;        -----------------------------------------
027A           1090   ;         function main
027A           1091   ;        -----------------------------------------
027A           1092   _main:
027A           1093   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:231: TIMER0_Init();
027A 120000    1094            lcall   _TIMER0_Init
027D           1095   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:233: waitms(500); // Give PuTTY a chance to start.
027D 9001F4    1096            mov     dptr,#0x01F4
0280 120000    1097            lcall   _waitms
0283           1098   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:234: printf("\x1b[2J"); // Clear screen using ANSI escape sequence.
0283 7408      1099            mov     a,#__str_0
0285 C0E0      1100            push    acc
0287 74BA      1101            mov     a,#(__str_0 >> 8)
0289 C0E0      1102            push    acc
028B 7480      1103            mov     a,#0x80
028D C0E0      1104            push    acc
028F 120000    1105            lcall   _printf
0292 1581      1106            dec     sp
0294 1581      1107            dec     sp
0296 1581      1108            dec     sp
0298           1109   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:239: __FILE__, __DATE__, __TIME__);
0298           1110   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:238: "Compiled: %s, %s\n\n",
0298 74C8      1111            mov     a,#__str_4
029A C0E0      1112            push    acc
029C 74BA      1113            mov     a,#(__str_4 >> 8)
029E C0E0      1114            push    acc
02A0 7480      1115            mov     a,#0x80
02A2 C0E0      1116            push    acc
02A4 7408      1117            mov     a,#__str_3
02A6 C0E0      1118            push    acc
02A8 74BB      1119            mov     a,#(__str_3 >> 8)
02AA C0E0      1120            push    acc
02AC 7480      1121            mov     a,#0x80
02AE C0E0      1122            push    acc
02B0 7448      1123            mov     a,#__str_2
02B2 C0E0      1124            push    acc
02B4 74BB      1125            mov     a,#(__str_2 >> 8)
02B6 C0E0      1126            push    acc
02B8 7480      1127            mov     a,#0x80
02BA C0E0      1128            push    acc
02BC 7488      1129            mov     a,#__str_1
02BE C0E0      1130            push    acc
02C0 74BB      1131            mov     a,#(__str_1 >> 8)
02C2 C0E0      1132            push    acc
02C4 7480      1133            mov     a,#0x80
02C6 C0E0      1134            push    acc
02C8 120000    1135            lcall   _printf
02CB E581      1136            mov     a,sp
02CD 24F4      1137            add     a,#0xf4
02CF F581      1138            mov     sp,a
02D1           1139   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:242: LCD_4BIT();
02D1 120000    1140            lcall   _LCD_4BIT
02D4           1141   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:245: LCDprint("Capacitance (nF): ", 1, 1);
02D4 752001    1142            mov     _LCDprint_PARM_2,#0x01
02D7 D290      1143            setb    _LCDprint_PARM_3
02D9 90BBC8    1144            mov     dptr,#__str_5
02DC 75F080    1145            mov     b,#0x80
02DF 120000    1146            lcall   _LCDprint
02E2           1147   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:248: while(1)
02E2           1148   L013002?:
02E2           1149   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:250: TL0=0;
02E2 758A00    1150            mov     _TL0,#0x00
02E5           1151   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:251: TH0=0;
02E5 758C00    1152            mov     _TH0,#0x00
02E8           1153   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:252: overflow_count=0;
02E8 75A000    1154            mov     _overflow_count,#0x00
02EB           1155   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:253: TF0=0;
02EB C28D      1156            clr     _TF0
02ED           1157   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:254: TR0=1; // Start Timer/Counter 0
02ED D28C      1158            setb    _TR0
02EF           1159   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:255: waitms(1000);
02EF 9003E8    1160            mov     dptr,#0x03E8
02F2 120000    1161            lcall   _waitms
02F5           1162   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:256: TR0=0; // Stop Timer/Counter 0
02F5 C28C      1163            clr     _TR0
02F7           1164   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:257: F=overflow_count*0x10000L+TH0*0x100L+TL0;
02F7 AAA0      1165            mov     r2,_overflow_count
02F9 7B00      1166            mov     r3,#0x00
02FB 8B05      1167            mov     ar5,r3
02FD 8A04      1168            mov     ar4,r2
02FF 7B00      1169            mov     r3,#0x00
0301 7A00      1170            mov     r2,#0x00
0303 AE8C      1171            mov     r6,_TH0
0305 7F00      1172            mov     r7,#0x00
0307 7800      1173            mov     r0,#0x00
0309 8801      1174            mov     ar1,r0
030B 8F00      1175            mov     ar0,r7
030D 8E07      1176            mov     ar7,r6
030F E4        1177            clr     a
0310 2A        1178            add     a,r2
0311 FA        1179            mov     r2,a
0312 EF        1180            mov     a,r7
0313 3B        1181            addc    a,r3
0314 FB        1182            mov     r3,a
0315 E8        1183            mov     a,r0
0316 3C        1184            addc    a,r4
0317 FC        1185            mov     r4,a
0318 E9        1186            mov     a,r1
0319 3D        1187            addc    a,r5
031A FD        1188            mov     r5,a
031B AE8A      1189            mov     r6,_TL0
031D E4        1190            clr     a
031E FF        1191            mov     r7,a
031F 33        1192            rlc     a
0320 95E0      1193            subb    a,acc
0322 F8        1194            mov     r0,a
0323 F9        1195            mov     r1,a
0324 EE        1196            mov     a,r6
0325 2A        1197            add     a,r2
0326 FA        1198            mov     r2,a
0327 EF        1199            mov     a,r7
0328 3B        1200            addc    a,r3
0329 FB        1201            mov     r3,a
032A E8        1202            mov     a,r0
032B 3C        1203            addc    a,r4
032C FC        1204            mov     r4,a
032D E9        1205            mov     a,r1
032E 3D        1206            addc    a,r5
032F           1207   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:259: capacitance = 1.44 * 1000000 / (3000 * (float)F);
032F FD        1208            mov     r5,a
0330 8A82      1209            mov     dpl,r2
0332 8B83      1210            mov     dph,r3
0334 8CF0      1211            mov     b,r4
0336 C002      1212            push    ar2
0338 C003      1213            push    ar3
033A C004      1214            push    ar4
033C C005      1215            push    ar5
033E 120000    1216            lcall   ___ulong2fs
0341 AE82      1217            mov     r6,dpl
0343 AF83      1218            mov     r7,dph
0345 A8F0      1219            mov     r0,b
0347 F9        1220            mov     r1,a
0348 C006      1221            push    ar6
034A C007      1222            push    ar7
034C C000      1223            push    ar0
034E C001      1224            push    ar1
0350 908000    1225            mov     dptr,#0x8000
0353 75F03B    1226            mov     b,#0x3B
0356 7445      1227            mov     a,#0x45
0358 120000    1228            lcall   ___fsmul
035B AE82      1229            mov     r6,dpl
035D AF83      1230            mov     r7,dph
035F A8F0      1231            mov     r0,b
0361 F9        1232            mov     r1,a
0362 E581      1233            mov     a,sp
0364 24FC      1234            add     a,#0xfc
0366 F581      1235            mov     sp,a
0368 C006      1236            push    ar6
036A C007      1237            push    ar7
036C C000      1238            push    ar0
036E C001      1239            push    ar1
0370 90C800    1240            mov     dptr,#0xC800
0373 75F0AF    1241            mov     b,#0xAF
0376 7449      1242            mov     a,#0x49
0378 120000    1243            lcall   ___fsdiv
037B 858260    1244            mov     _capacitance,dpl
037E 858361    1245            mov     (_capacitance + 1),dph
0381 85F062    1246            mov     (_capacitance + 2),b
0384 F563      1247            mov     (_capacitance + 3),a
0386 E581      1248            mov     a,sp
0388 24FC      1249            add     a,#0xfc
038A F581      1250            mov     sp,a
038C           1251   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:261: capacitance = 1000* capacitance;
038C C060      1252            push    _capacitance
038E C061      1253            push    (_capacitance + 1)
0390 C062      1254            push    (_capacitance + 2)
0392 C063      1255            push    (_capacitance + 3)
0394 900000    1256            mov     dptr,#0x0000
0397 75F07A    1257            mov     b,#0x7A
039A 7444      1258            mov     a,#0x44
039C 120000    1259            lcall   ___fsmul
039F 858260    1260            mov     _capacitance,dpl
03A2 858361    1261            mov     (_capacitance + 1),dph
03A5 85F062    1262            mov     (_capacitance + 2),b
03A8 F563      1263            mov     (_capacitance + 3),a
03AA E581      1264            mov     a,sp
03AC 24FC      1265            add     a,#0xfc
03AE F581      1266            mov     sp,a
03B0           1267   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:263: sprintf(buff,"%.4f",capacitance);
03B0 C060      1268            push    _capacitance
03B2 C061      1269            push    (_capacitance + 1)
03B4 C062      1270            push    (_capacitance + 2)
03B6 C063      1271            push    (_capacitance + 3)
03B8 7408      1272            mov     a,#__str_6
03BA C0E0      1273            push    acc
03BC 74BD      1274            mov     a,#(__str_6 >> 8)
03BE C0E0      1275            push    acc
03C0 7480      1276            mov     a,#0x80
03C2 C0E0      1277            push    acc
03C4 7448      1278            mov     a,#_main_buff_1_74
03C6 C0E0      1279            push    acc
03C8 74B2      1280            mov     a,#(_main_buff_1_74 >> 8)
03CA C0E0      1281            push    acc
03CC 7440      1282            mov     a,#0x40
03CE C0E0      1283            push    acc
03D0 120000    1284            lcall   _sprintf
03D3 E581      1285            mov     a,sp
03D5 24F6      1286            add     a,#0xf6
03D7 F581      1287            mov     sp,a
03D9           1288   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:264: LCDprint(buff, 2, 1);
03D9 752002    1289            mov     _LCDprint_PARM_2,#0x02
03DC D290      1290            setb    _LCDprint_PARM_3
03DE 90B248    1291            mov     dptr,#_main_buff_1_74
03E1 75F040    1292            mov     b,#0x40
03E4 120000    1293            lcall   _LCDprint
03E7           1294   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:265: printf("\rFreq = %lu Hz\n", F);
03E7 7488      1295            mov     a,#__str_7
03E9 C0E0      1296            push    acc
03EB 74BD      1297            mov     a,#(__str_7 >> 8)
03ED C0E0      1298            push    acc
03EF 7480      1299            mov     a,#0x80
03F1 C0E0      1300            push    acc
03F3 120000    1301            lcall   _printf
03F6 E581      1302            mov     a,sp
03F8 24F9      1303            add     a,#0xf9
03FA F581      1304            mov     sp,a
03FC           1305   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:266: printf("C = %g nF", capacitance);
03FC C060      1306            push    _capacitance
03FE C061      1307            push    (_capacitance + 1)
0400 C062      1308            push    (_capacitance + 2)
0402 C063      1309            push    (_capacitance + 3)
0404 74C8      1310            mov     a,#__str_8
0406 C0E0      1311            push    acc
0408 74BD      1312            mov     a,#(__str_8 >> 8)
040A C0E0      1313            push    acc
040C 7480      1314            mov     a,#0x80
040E C0E0      1315            push    acc
0410 120000    1316            lcall   _printf
0413 E581      1317            mov     a,sp
0415 24F9      1318            add     a,#0xf9
0417 F581      1319            mov     sp,a
0419           1320   ;        C:\Users\241pr\Downloads\FreqEFM8 (1).c:267: printf("\x1b[0K"); // ANSI: Clear from cursor to end of line.
0419 7408      1321            mov     a,#__str_9
041B C0E0      1322            push    acc
041D 74BE      1323            mov     a,#(__str_9 >> 8)
041F C0E0      1324            push    acc
0421 7480      1325            mov     a,#0x80
0423 C0E0      1326            push    acc
0425 120000    1327            lcall   _printf
0428 1581      1328            dec     sp
042A 1581      1329            dec     sp
042C 1581      1330            dec     sp
042E 020000    1331            ljmp    L013002?
0431           1332            rseg R_CSEG
0431           1333   
0000           1334            rseg R_XINIT
0000           1335   
0000           1336            rseg R_CONST
0000           1337   __str_0:
0000 1B        1338            db 0x1B
0001 5B324A    1339            db '[2J'
0004 00        1340            db 0x00
0005           1341   __str_1:
0005 45464D38  1342            db 'EFM8 Frequency measurement using Timer/Counter 0.'
     20467265
     7175656E
     6379206D
     65617375
     72656D65
     6E742075
     73696E67
     2054696D
     65722F43
     6F756E74
     65722030
     2E
0036 0A        1343            db 0x0A
0037 46696C65  1344            db 'File: %s'
     3A202573
003F 0A        1345            db 0x0A
0040 43        1346            db 'C'
0041 6F6D7069  1347            db 'ompiled: %s, %s'
     6C65643A
     2025732C
     202573
0050 0A        1348            db 0x0A
0051 0A        1349            db 0x0A
0052 00        1350            db 0x00
0053           1351   __str_2:
0053 433A      1352            db 'C:'
0055 5C        1353            db 0x5C
0056 55736572  1354            db 'Users'
     73
005B 5C        1355            db 0x5C
005C 32343170  1356            db '241pr'
     72
0061 5C        1357            db 0x5C
0062 446F776E  1358            db 'Downloads'
     6C6F6164
     73
006B 5C        1359            db 0x5C
006C 46726571  1360            db 'FreqEFM8 (1).c'
     45464D38
     20283129
     2E63
007A 00        1361            db 0x00
007B           1362   __str_3:
007B 4D617220  1363            db 'Mar 15 2023'
     31352032
     303233
0086 00        1364            db 0x00
0087           1365   __str_4:
0087 31333A34  1366            db '13:43:54'
     333A3534
008F 00        1367            db 0x00
0090           1368   __str_5:
0090 43617061  1369            db 'Capacitance (nF): '
     63697461
     6E636520
     286E4629
     3A20
00A2 00        1370            db 0x00
00A3           1371   __str_6:
00A3 252E3466  1372            db '%.4f'
00A7 00        1373            db 0x00
00A8           1374   __str_7:
00A8 0D        1375            db 0x0D
00A9 46726571  1376            db 'Freq = %lu Hz'
     203D2025
     6C752048
     7A
00B6 0A        1377            db 0x0A
00B7 00        1378            db 0x00
00B8           1379   __str_8:
00B8 43203D20  1380            db 'C = %g nF'
     2567206E
     46
00C1 00        1381            db 0x00
00C2           1382   __str_9:
00C2 1B        1383            db 0x1B
00C3 5B304B    1384            db '[0K'
00C6 00        1385            db 0x00
00C7           1386   
0003           1387            CSEG
0003           1388   
0003           1389   end
